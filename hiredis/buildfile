import libs = libssl%lib{ssl}

./: lib{hiredis hiredis-ssl}

lib{hiredis}: libul{hiredis}: \
    {c h}{alloc async dict hiredis net read sds sockcompat} \
    h{sdsalloc async_private fmacros win32 adapters/*}
lib{hiredis}: def{hiredis}: include = ($cxx.target.class == 'windows')
def{hiredis}: libul{hiredis}

lib{hiredis-ssl}: libul{hiredis-ssl}: \
    c{ssl} \
    h{hiredis_ssl} \
    lib{hiredis} \
    $libs
lib{hiredis-ssl}: def{hiredis-ssl}: include = ($cxx.target.class == 'windows')
def{hiredis-ssl}: libul{hiredis-ssl}

if ($cxx.target.system == 'mingw32')
  cxx.loptions += -Wl,--export-all-symbols

c.poptions =+ "-I$src_base"

if ($c.target.class == 'windows')
{
    c.poptions =+ "-D_CRT_SECURE_NO_WARNINGS" "-DWIN32_LEAN_AND_MEAN"
}

switch $c.target.class, $c.target.system
{
    case 'windows', 'mingw32'
    {
        c.libs =+ "-lws2_32"
    }
    case 'windows'
    {
        c.libs =+ "ws2_32.lib"
    }
}

lib{hiredis}:
{
  c.export.poptions = "-I$src_base"
}

lib{hiredis-ssl}:
{
  c.export.libs =+ lib{hiredis}
}
